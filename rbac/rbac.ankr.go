// Code generated by protoc-gen-ankr. DO NOT EDIT.
// source: proto/rbac.proto

package rbac

import (
	context "context"
	json "encoding/json"
	fmt "fmt"
	logger "github.com/Ankr-network/dccn-tools/logger"
	zap "github.com/Ankr-network/dccn-tools/zap"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	metadata "google.golang.org/grpc/metadata"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthorizeRequest struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Resource             string   `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Action               string   `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizeRequest) Reset()         { *m = AuthorizeRequest{} }
func (m *AuthorizeRequest) String() string { return proto.CompactTextString(m) }
func (*AuthorizeRequest) ProtoMessage()    {}
func (*AuthorizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2a8874602dd8505, []int{0}
}

func (m *AuthorizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeRequest.Unmarshal(m, b)
}
func (m *AuthorizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeRequest.Marshal(b, m, deterministic)
}
func (m *AuthorizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeRequest.Merge(m, src)
}
func (m *AuthorizeRequest) XXX_Size() int {
	return xxx_messageInfo_AuthorizeRequest.Size(m)
}
func (m *AuthorizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeRequest proto.InternalMessageInfo

func (m *AuthorizeRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *AuthorizeRequest) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *AuthorizeRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

type AuthorizeResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizeResponse) Reset()         { *m = AuthorizeResponse{} }
func (m *AuthorizeResponse) String() string { return proto.CompactTextString(m) }
func (*AuthorizeResponse) ProtoMessage()    {}
func (*AuthorizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2a8874602dd8505, []int{1}
}

func (m *AuthorizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeResponse.Unmarshal(m, b)
}
func (m *AuthorizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeResponse.Marshal(b, m, deterministic)
}
func (m *AuthorizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeResponse.Merge(m, src)
}
func (m *AuthorizeResponse) XXX_Size() int {
	return xxx_messageInfo_AuthorizeResponse.Size(m)
}
func (m *AuthorizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeResponse proto.InternalMessageInfo

func (m *AuthorizeResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*AuthorizeRequest)(nil), "rbac.AuthorizeRequest")
	proto.RegisterType((*AuthorizeResponse)(nil), "rbac.AuthorizeResponse")
}

func init() { proto.RegisterFile("proto/rbac.proto", fileDescriptor_d2a8874602dd8505) }

var fileDescriptor_d2a8874602dd8505 = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x18, 0x84, 0x69, 0x95, 0xba, 0x1b, 0x54, 0xd6, 0x1c, 0xb4, 0x14, 0xd1, 0xa5, 0x5e, 0x44, 0xd8,
	0x06, 0x15, 0x3c, 0x78, 0xd3, 0x9b, 0xd7, 0x1e, 0xc4, 0x6b, 0x1a, 0x63, 0x1b, 0xdb, 0xcd, 0x5f,
	0x93, 0x3f, 0xbb, 0xe2, 0xd1, 0x57, 0xf0, 0xd1, 0x7c, 0x00, 0x41, 0x7c, 0x10, 0xd9, 0x54, 0x8b,
	0xeb, 0xde, 0x86, 0x2f, 0x33, 0x99, 0x9f, 0x21, 0xa3, 0xd6, 0x00, 0x02, 0x33, 0x05, 0x17, 0x99,
	0x97, 0x74, 0x7d, 0xa1, 0x93, 0x8b, 0x52, 0x61, 0xe5, 0x8a, 0x4c, 0xc0, 0x94, 0x4d, 0xe7, 0x0a,
	0x6b, 0x98, 0xb3, 0x12, 0x26, 0xde, 0x32, 0x99, 0xf1, 0x46, 0xdd, 0x73, 0x04, 0x63, 0x59, 0x2f,
	0xbb, 0x74, 0xb2, 0x5f, 0x02, 0x94, 0x8d, 0x64, 0xbc, 0x55, 0x8c, 0x6b, 0x0d, 0xc8, 0x51, 0x81,
	0xb6, 0xdd, 0x6b, 0xfa, 0x4c, 0x46, 0x57, 0x0e, 0x2b, 0x30, 0xea, 0x45, 0xe6, 0xf2, 0xc9, 0x49,
	0x8b, 0x74, 0x4c, 0x36, 0xac, 0x2b, 0x1e, 0xa5, 0xc0, 0x38, 0x18, 0x07, 0xc7, 0xc3, 0xeb, 0xe8,
	0xf3, 0xe3, 0x30, 0xbc, 0x0b, 0xf2, 0x5f, 0x4c, 0x53, 0x32, 0x30, 0xd2, 0x82, 0x33, 0x42, 0xc6,
	0xe1, 0x92, 0xa5, 0xe7, 0xf4, 0x80, 0x44, 0x5c, 0x2c, 0xaa, 0xe2, 0xb5, 0x25, 0xc7, 0x0f, 0x4d,
	0x8f, 0xc8, 0xce, 0x9f, 0x66, 0xdb, 0x82, 0xb6, 0x92, 0x6e, 0x93, 0x10, 0x6a, 0xdf, 0x3a, 0xc8,
	0x43, 0xa8, 0xcf, 0x1e, 0xc8, 0xe6, 0x8d, 0x46, 0x69, 0x34, 0x6f, 0x72, 0x68, 0x24, 0xbd, 0x25,
	0xc3, 0x3e, 0x44, 0x77, 0x33, 0x3f, 0xd2, 0xff, 0xfb, 0x93, 0xbd, 0x15, 0xde, 0xfd, 0x9e, 0xc6,
	0xaf, 0xef, 0x5f, 0x6f, 0x21, 0x4d, 0xb7, 0xfc, 0xba, 0x6c, 0x76, 0xca, 0xb8, 0xc3, 0xea, 0x32,
	0x38, 0x29, 0x22, 0xbf, 0xc6, 0xf9, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x05, 0x6d, 0xcc, 0x4a,
	0x7d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn
var l = logger.NewLogger()

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion5

// InternalRoleClient is the client API for InternalRole service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InternalRoleClient interface {
	Authorize(ctx context.Context, in *AuthorizeRequest, opts ...grpc.CallOption) (*AuthorizeResponse, error)
	Close() error
}

type internalRoleClient struct {
	cc *grpc.ClientConn
}

// origin client method
func NewInternalRoleClient(cc *grpc.ClientConn) InternalRoleClient {
	return &internalRoleClient{cc}
}

// new client method
func NewAnkrInternalRoleClient(addr string) (InternalRoleClient, error) {
	c, err := grpc.Dial(addr, grpc.WithInsecure())
	if err != nil {
		return nil, err
	}
	return &internalRoleClient{c}, nil
}

// new client close method
func (c *internalRoleClient) Close() error {
	return c.cc.Close()
}

func (c *internalRoleClient) Authorize(ctx context.Context, in *AuthorizeRequest, opts ...grpc.CallOption) (*AuthorizeResponse, error) {
	out := new(AuthorizeResponse)
	err := c.cc.Invoke(ctx, "/rbac.InternalRole/Authorize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InternalRoleServer is the server API for InternalRole service.
type InternalRoleServer interface {
	Authorize(context.Context, *AuthorizeRequest) (*AuthorizeResponse, error)
}

// UnimplementedInternalRoleServer can be embedded to have forward compatible implementations.
type UnimplementedInternalRoleServer struct {
}

func (*UnimplementedInternalRoleServer) Authorize(ctx context.Context, req *AuthorizeRequest) (*AuthorizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authorize not implemented")
}

func RegisterInternalRoleServer(s *grpc.Server, srv InternalRoleServer) {
	s.RegisterService(&_InternalRole_serviceDesc, srv)
}

func _InternalRole_Authorize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	//if exist trace id then set new span id, else set the entire id values
	m := make(map[string]string)
	if md, ok := metadata.FromIncomingContext(ctx); ok {
		if vs := md.Get(logger.TraceID); len(vs) > 0 {
			m[logger.TraceID] = vs[len(vs)-1]
		} else {
			m[logger.TraceID] = l.Generate().String()
		}
		if vs := md.Get(logger.SpanID); len(vs) > 0 {
			m[logger.ParentSpanID] = vs[len(vs)-1]
		} else {
			m[logger.ParentSpanID] = l.Generate().String()
		}
	}
	m[logger.SpanID] = l.Generate().String()
	ctx = metadata.NewIncomingContext(ctx, metadata.New(m))
	if interceptor == nil {
		// output request
		reqBody, err := json.Marshal(&in)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "request"))
		} else {
			l.Info(ctx, string(reqBody), zap.String("type", "request"))
		}
		rsp, err := srv.(InternalRoleServer).Authorize(ctx, in)
		// output response
		rspBody, err := json.Marshal(&rsp)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "response"))
		} else {
			l.Info(ctx, string(rspBody), zap.String("type", "response"))
		}
		return rsp, err
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rbac.InternalRole/Authorize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalRoleServer).Authorize(ctx, req.(*AuthorizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InternalRole_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rbac.InternalRole",
	HandlerType: (*InternalRoleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authorize",
			Handler:    _InternalRole_Authorize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/rbac.proto",
}
