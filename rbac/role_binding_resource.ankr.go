// Code generated by protoc-gen-ankr. DO NOT EDIT.
// source: proto/role_binding_resource.proto

package rbac

import (
	context "context"
	json "encoding/json"
	fmt "fmt"
	math "math"

	logger "github.com/Ankr-network/dccn-tools/logger"
	zap "github.com/Ankr-network/dccn-tools/zap"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	metadata "google.golang.org/grpc/metadata"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RoleBindingResourceAddRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Subject              string   `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Resource             string   `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	Action               string   `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Policy               string   `protobuf:"bytes,5,opt,name=policy,proto3" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleBindingResourceAddRequest) Reset()         { *m = RoleBindingResourceAddRequest{} }
func (m *RoleBindingResourceAddRequest) String() string { return proto.CompactTextString(m) }
func (*RoleBindingResourceAddRequest) ProtoMessage()    {}
func (*RoleBindingResourceAddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc62e8d53b9acca2, []int{0}
}

func (m *RoleBindingResourceAddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingResourceAddRequest.Unmarshal(m, b)
}
func (m *RoleBindingResourceAddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingResourceAddRequest.Marshal(b, m, deterministic)
}
func (m *RoleBindingResourceAddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingResourceAddRequest.Merge(m, src)
}
func (m *RoleBindingResourceAddRequest) XXX_Size() int {
	return xxx_messageInfo_RoleBindingResourceAddRequest.Size(m)
}
func (m *RoleBindingResourceAddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingResourceAddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingResourceAddRequest proto.InternalMessageInfo

func (m *RoleBindingResourceAddRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RoleBindingResourceAddRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *RoleBindingResourceAddRequest) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *RoleBindingResourceAddRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RoleBindingResourceAddRequest) GetPolicy() string {
	if m != nil {
		return m.Policy
	}
	return ""
}

type RoleBindingResourceAddResponse struct {
	Rsp                  *Response `protobuf:"bytes,1,opt,name=rsp,proto3" json:"rsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RoleBindingResourceAddResponse) Reset()         { *m = RoleBindingResourceAddResponse{} }
func (m *RoleBindingResourceAddResponse) String() string { return proto.CompactTextString(m) }
func (*RoleBindingResourceAddResponse) ProtoMessage()    {}
func (*RoleBindingResourceAddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc62e8d53b9acca2, []int{1}
}

func (m *RoleBindingResourceAddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingResourceAddResponse.Unmarshal(m, b)
}
func (m *RoleBindingResourceAddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingResourceAddResponse.Marshal(b, m, deterministic)
}
func (m *RoleBindingResourceAddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingResourceAddResponse.Merge(m, src)
}
func (m *RoleBindingResourceAddResponse) XXX_Size() int {
	return xxx_messageInfo_RoleBindingResourceAddResponse.Size(m)
}
func (m *RoleBindingResourceAddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingResourceAddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingResourceAddResponse proto.InternalMessageInfo

func (m *RoleBindingResourceAddResponse) GetRsp() *Response {
	if m != nil {
		return m.Rsp
	}
	return nil
}

type RoleBindingResourceDelRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleBindingResourceDelRequest) Reset()         { *m = RoleBindingResourceDelRequest{} }
func (m *RoleBindingResourceDelRequest) String() string { return proto.CompactTextString(m) }
func (*RoleBindingResourceDelRequest) ProtoMessage()    {}
func (*RoleBindingResourceDelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc62e8d53b9acca2, []int{2}
}

func (m *RoleBindingResourceDelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingResourceDelRequest.Unmarshal(m, b)
}
func (m *RoleBindingResourceDelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingResourceDelRequest.Marshal(b, m, deterministic)
}
func (m *RoleBindingResourceDelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingResourceDelRequest.Merge(m, src)
}
func (m *RoleBindingResourceDelRequest) XXX_Size() int {
	return xxx_messageInfo_RoleBindingResourceDelRequest.Size(m)
}
func (m *RoleBindingResourceDelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingResourceDelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingResourceDelRequest proto.InternalMessageInfo

func (m *RoleBindingResourceDelRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RoleBindingResourceDelResponse struct {
	Rsp                  *Response `protobuf:"bytes,1,opt,name=rsp,proto3" json:"rsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RoleBindingResourceDelResponse) Reset()         { *m = RoleBindingResourceDelResponse{} }
func (m *RoleBindingResourceDelResponse) String() string { return proto.CompactTextString(m) }
func (*RoleBindingResourceDelResponse) ProtoMessage()    {}
func (*RoleBindingResourceDelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc62e8d53b9acca2, []int{3}
}

func (m *RoleBindingResourceDelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingResourceDelResponse.Unmarshal(m, b)
}
func (m *RoleBindingResourceDelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingResourceDelResponse.Marshal(b, m, deterministic)
}
func (m *RoleBindingResourceDelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingResourceDelResponse.Merge(m, src)
}
func (m *RoleBindingResourceDelResponse) XXX_Size() int {
	return xxx_messageInfo_RoleBindingResourceDelResponse.Size(m)
}
func (m *RoleBindingResourceDelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingResourceDelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingResourceDelResponse proto.InternalMessageInfo

func (m *RoleBindingResourceDelResponse) GetRsp() *Response {
	if m != nil {
		return m.Rsp
	}
	return nil
}

type RoleBindingResourceModRequest struct {
	Role                 *RoleBindingResource `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RoleBindingResourceModRequest) Reset()         { *m = RoleBindingResourceModRequest{} }
func (m *RoleBindingResourceModRequest) String() string { return proto.CompactTextString(m) }
func (*RoleBindingResourceModRequest) ProtoMessage()    {}
func (*RoleBindingResourceModRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc62e8d53b9acca2, []int{4}
}

func (m *RoleBindingResourceModRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingResourceModRequest.Unmarshal(m, b)
}
func (m *RoleBindingResourceModRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingResourceModRequest.Marshal(b, m, deterministic)
}
func (m *RoleBindingResourceModRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingResourceModRequest.Merge(m, src)
}
func (m *RoleBindingResourceModRequest) XXX_Size() int {
	return xxx_messageInfo_RoleBindingResourceModRequest.Size(m)
}
func (m *RoleBindingResourceModRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingResourceModRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingResourceModRequest proto.InternalMessageInfo

func (m *RoleBindingResourceModRequest) GetRole() *RoleBindingResource {
	if m != nil {
		return m.Role
	}
	return nil
}

type RoleBindingResourceModResponse struct {
	Rsp                  *Response `protobuf:"bytes,1,opt,name=rsp,proto3" json:"rsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RoleBindingResourceModResponse) Reset()         { *m = RoleBindingResourceModResponse{} }
func (m *RoleBindingResourceModResponse) String() string { return proto.CompactTextString(m) }
func (*RoleBindingResourceModResponse) ProtoMessage()    {}
func (*RoleBindingResourceModResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc62e8d53b9acca2, []int{5}
}

func (m *RoleBindingResourceModResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingResourceModResponse.Unmarshal(m, b)
}
func (m *RoleBindingResourceModResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingResourceModResponse.Marshal(b, m, deterministic)
}
func (m *RoleBindingResourceModResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingResourceModResponse.Merge(m, src)
}
func (m *RoleBindingResourceModResponse) XXX_Size() int {
	return xxx_messageInfo_RoleBindingResourceModResponse.Size(m)
}
func (m *RoleBindingResourceModResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingResourceModResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingResourceModResponse proto.InternalMessageInfo

func (m *RoleBindingResourceModResponse) GetRsp() *Response {
	if m != nil {
		return m.Rsp
	}
	return nil
}

type RoleBindingResource struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Subject              string   `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Resource             string   `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	Action               string   `protobuf:"bytes,5,opt,name=action,proto3" json:"action,omitempty"`
	Policy               string   `protobuf:"bytes,6,opt,name=policy,proto3" json:"policy,omitempty"`
	Status               int64    `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleBindingResource) Reset()         { *m = RoleBindingResource{} }
func (m *RoleBindingResource) String() string { return proto.CompactTextString(m) }
func (*RoleBindingResource) ProtoMessage()    {}
func (*RoleBindingResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc62e8d53b9acca2, []int{6}
}

func (m *RoleBindingResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingResource.Unmarshal(m, b)
}
func (m *RoleBindingResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingResource.Marshal(b, m, deterministic)
}
func (m *RoleBindingResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingResource.Merge(m, src)
}
func (m *RoleBindingResource) XXX_Size() int {
	return xxx_messageInfo_RoleBindingResource.Size(m)
}
func (m *RoleBindingResource) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingResource.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingResource proto.InternalMessageInfo

func (m *RoleBindingResource) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RoleBindingResource) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RoleBindingResource) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *RoleBindingResource) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *RoleBindingResource) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RoleBindingResource) GetPolicy() string {
	if m != nil {
		return m.Policy
	}
	return ""
}

func (m *RoleBindingResource) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type RoleBindingResourceQryRequest struct {
	Page                 int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Num                  int64    `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleBindingResourceQryRequest) Reset()         { *m = RoleBindingResourceQryRequest{} }
func (m *RoleBindingResourceQryRequest) String() string { return proto.CompactTextString(m) }
func (*RoleBindingResourceQryRequest) ProtoMessage()    {}
func (*RoleBindingResourceQryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc62e8d53b9acca2, []int{7}
}

func (m *RoleBindingResourceQryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingResourceQryRequest.Unmarshal(m, b)
}
func (m *RoleBindingResourceQryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingResourceQryRequest.Marshal(b, m, deterministic)
}
func (m *RoleBindingResourceQryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingResourceQryRequest.Merge(m, src)
}
func (m *RoleBindingResourceQryRequest) XXX_Size() int {
	return xxx_messageInfo_RoleBindingResourceQryRequest.Size(m)
}
func (m *RoleBindingResourceQryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingResourceQryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingResourceQryRequest proto.InternalMessageInfo

func (m *RoleBindingResourceQryRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *RoleBindingResourceQryRequest) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *RoleBindingResourceQryRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type RoleBindingResourceQryResponse struct {
	Rsp                  *Response              `protobuf:"bytes,1,opt,name=rsp,proto3" json:"rsp,omitempty"`
	Data                 []*RoleBindingResource `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Total                int64                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RoleBindingResourceQryResponse) Reset()         { *m = RoleBindingResourceQryResponse{} }
func (m *RoleBindingResourceQryResponse) String() string { return proto.CompactTextString(m) }
func (*RoleBindingResourceQryResponse) ProtoMessage()    {}
func (*RoleBindingResourceQryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc62e8d53b9acca2, []int{8}
}

func (m *RoleBindingResourceQryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingResourceQryResponse.Unmarshal(m, b)
}
func (m *RoleBindingResourceQryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingResourceQryResponse.Marshal(b, m, deterministic)
}
func (m *RoleBindingResourceQryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingResourceQryResponse.Merge(m, src)
}
func (m *RoleBindingResourceQryResponse) XXX_Size() int {
	return xxx_messageInfo_RoleBindingResourceQryResponse.Size(m)
}
func (m *RoleBindingResourceQryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingResourceQryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingResourceQryResponse proto.InternalMessageInfo

func (m *RoleBindingResourceQryResponse) GetRsp() *Response {
	if m != nil {
		return m.Rsp
	}
	return nil
}

func (m *RoleBindingResourceQryResponse) GetData() []*RoleBindingResource {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RoleBindingResourceQryResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type RoleBindingResourceListRequest struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleBindingResourceListRequest) Reset()         { *m = RoleBindingResourceListRequest{} }
func (m *RoleBindingResourceListRequest) String() string { return proto.CompactTextString(m) }
func (*RoleBindingResourceListRequest) ProtoMessage()    {}
func (*RoleBindingResourceListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc62e8d53b9acca2, []int{9}
}

func (m *RoleBindingResourceListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingResourceListRequest.Unmarshal(m, b)
}
func (m *RoleBindingResourceListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingResourceListRequest.Marshal(b, m, deterministic)
}
func (m *RoleBindingResourceListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingResourceListRequest.Merge(m, src)
}
func (m *RoleBindingResourceListRequest) XXX_Size() int {
	return xxx_messageInfo_RoleBindingResourceListRequest.Size(m)
}
func (m *RoleBindingResourceListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingResourceListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingResourceListRequest proto.InternalMessageInfo

func (m *RoleBindingResourceListRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type RoleBindingResourceListResponse struct {
	Rsp                  *Response              `protobuf:"bytes,1,opt,name=rsp,proto3" json:"rsp,omitempty"`
	Data                 []*RoleBindingResource `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RoleBindingResourceListResponse) Reset()         { *m = RoleBindingResourceListResponse{} }
func (m *RoleBindingResourceListResponse) String() string { return proto.CompactTextString(m) }
func (*RoleBindingResourceListResponse) ProtoMessage()    {}
func (*RoleBindingResourceListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc62e8d53b9acca2, []int{10}
}

func (m *RoleBindingResourceListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindingResourceListResponse.Unmarshal(m, b)
}
func (m *RoleBindingResourceListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindingResourceListResponse.Marshal(b, m, deterministic)
}
func (m *RoleBindingResourceListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindingResourceListResponse.Merge(m, src)
}
func (m *RoleBindingResourceListResponse) XXX_Size() int {
	return xxx_messageInfo_RoleBindingResourceListResponse.Size(m)
}
func (m *RoleBindingResourceListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindingResourceListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindingResourceListResponse proto.InternalMessageInfo

func (m *RoleBindingResourceListResponse) GetRsp() *Response {
	if m != nil {
		return m.Rsp
	}
	return nil
}

func (m *RoleBindingResourceListResponse) GetData() []*RoleBindingResource {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*RoleBindingResourceAddRequest)(nil), "rbac.RoleBindingResourceAddRequest")
	proto.RegisterType((*RoleBindingResourceAddResponse)(nil), "rbac.RoleBindingResourceAddResponse")
	proto.RegisterType((*RoleBindingResourceDelRequest)(nil), "rbac.RoleBindingResourceDelRequest")
	proto.RegisterType((*RoleBindingResourceDelResponse)(nil), "rbac.RoleBindingResourceDelResponse")
	proto.RegisterType((*RoleBindingResourceModRequest)(nil), "rbac.RoleBindingResourceModRequest")
	proto.RegisterType((*RoleBindingResourceModResponse)(nil), "rbac.RoleBindingResourceModResponse")
	proto.RegisterType((*RoleBindingResource)(nil), "rbac.RoleBindingResource")
	proto.RegisterType((*RoleBindingResourceQryRequest)(nil), "rbac.RoleBindingResourceQryRequest")
	proto.RegisterType((*RoleBindingResourceQryResponse)(nil), "rbac.RoleBindingResourceQryResponse")
	proto.RegisterType((*RoleBindingResourceListRequest)(nil), "rbac.RoleBindingResourceListRequest")
	proto.RegisterType((*RoleBindingResourceListResponse)(nil), "rbac.RoleBindingResourceListResponse")
}

func init() { proto.RegisterFile("proto/role_binding_resource.proto", fileDescriptor_bc62e8d53b9acca2) }

var fileDescriptor_bc62e8d53b9acca2 = []byte{
	// 668 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0xc7, 0x3f, 0xc7, 0x69, 0xfa, 0xb1, 0x48, 0x15, 0x5a, 0xaa, 0xc8, 0x58, 0xd0, 0x86, 0x05,
	0x54, 0xa8, 0x48, 0x56, 0x14, 0x44, 0x05, 0x17, 0xd4, 0xaa, 0x47, 0x8a, 0x54, 0x73, 0xe1, 0x56,
	0x6d, 0xe2, 0x55, 0x58, 0x70, 0xbc, 0xae, 0x77, 0xdd, 0x28, 0x8a, 0x22, 0x04, 0x97, 0x9e, 0x11,
	0x0f, 0xc3, 0x85, 0x0b, 0xcf, 0xc0, 0x03, 0x20, 0x21, 0x1e, 0x04, 0xed, 0x7a, 0x63, 0x3b, 0xd4,
	0x76, 0x72, 0xe1, 0x16, 0xcf, 0xcc, 0xee, 0xfc, 0x66, 0xe6, 0x3f, 0x1b, 0x70, 0x3b, 0x8a, 0xb9,
	0xe4, 0x38, 0xe6, 0x01, 0x3d, 0xed, 0xb3, 0xd0, 0x67, 0xe1, 0xf0, 0x34, 0xa6, 0x82, 0x27, 0xf1,
	0x80, 0xf6, 0xb4, 0x0f, 0x36, 0xe3, 0x3e, 0x19, 0xb8, 0x4f, 0x87, 0x4c, 0xbe, 0x4d, 0xfa, 0xbd,
	0x01, 0x1f, 0xe1, 0xd1, 0x98, 0xc9, 0xf7, 0x7c, 0x8c, 0x87, 0xbc, 0xab, 0x43, 0xba, 0xe7, 0x24,
	0x60, 0x3e, 0x91, 0x3c, 0x16, 0x38, 0xfb, 0x99, 0x9e, 0x76, 0x6f, 0x0e, 0x39, 0x1f, 0x06, 0x14,
	0x93, 0x88, 0x61, 0x12, 0x86, 0x5c, 0x12, 0xc9, 0x78, 0x28, 0x8c, 0x77, 0xd3, 0xa4, 0xa7, 0x22,
	0xe2, 0xa1, 0x30, 0x19, 0xd1, 0x77, 0x0b, 0xdc, 0xf2, 0x78, 0x40, 0x0f, 0x53, 0x20, 0xcf, 0xf0,
	0x1c, 0xf8, 0xbe, 0x47, 0xcf, 0x12, 0x2a, 0x24, 0x74, 0x41, 0x53, 0x4e, 0x22, 0xea, 0x58, 0x1d,
	0xeb, 0xfe, 0x95, 0xc3, 0xd6, 0xaf, 0x9f, 0xdb, 0x8d, 0x37, 0x96, 0xa7, 0x6d, 0xb0, 0x03, 0xd6,
	0x45, 0xd2, 0x7f, 0x47, 0x07, 0xd2, 0x69, 0x2c, 0xb8, 0xe7, 0x66, 0x88, 0xc0, 0xff, 0xf3, 0x1a,
	0x1d, 0x7b, 0x21, 0x24, 0xb3, 0xc3, 0x2d, 0xd0, 0x22, 0x03, 0x85, 0xea, 0x34, 0x17, 0x22, 0x8c,
	0x55, 0xf9, 0x23, 0x1e, 0xb0, 0xc1, 0xc4, 0x59, 0x5b, 0xf4, 0xa7, 0x56, 0x74, 0x08, 0xb6, 0xaa,
	0x4a, 0x48, 0x6b, 0x85, 0x1d, 0x60, 0xc7, 0x22, 0xd2, 0x25, 0x5c, 0xdd, 0xdb, 0xe8, 0xa9, 0x2e,
	0xf7, 0xe6, 0x4e, 0x4f, 0xb9, 0xd0, 0x7e, 0x69, 0x1b, 0x8e, 0x68, 0x30, 0x6f, 0x43, 0x1b, 0x34,
	0x98, 0xaf, 0x6f, 0xb0, 0x53, 0x80, 0x6b, 0xff, 0x79, 0x0d, 0xe6, 0x57, 0x24, 0xd7, 0x07, 0x57,
	0x4e, 0xfe, 0xaa, 0x34, 0xf9, 0x31, 0xcf, 0x66, 0xd0, 0x05, 0x4d, 0x25, 0x1b, 0x73, 0xc7, 0x0d,
	0x73, 0xc7, 0xe5, 0x23, 0x9e, 0x0e, 0xab, 0x60, 0xd2, 0xf7, 0xad, 0xcc, 0xf4, 0xd5, 0x02, 0xd7,
	0x4b, 0x2e, 0x81, 0x1b, 0x79, 0x1f, 0x54, 0xfd, 0x10, 0x1a, 0x79, 0xe8, 0xf9, 0x1b, 0x59, 0x38,
	0xb9, 0x2c, 0xf4, 0xcc, 0x73, 0x39, 0xb8, 0x05, 0x39, 0xe8, 0x61, 0x17, 0x64, 0xd0, 0xce, 0x64,
	0xa0, 0xc7, 0x9c, 0x8d, 0xbf, 0x9d, 0x8d, 0xbf, 0x95, 0xda, 0xd3, 0x2f, 0x65, 0x17, 0x92, 0xc8,
	0x44, 0x38, 0xeb, 0x9a, 0xc6, 0x7c, 0xa1, 0xb3, 0xd2, 0x6e, 0x9e, 0xc4, 0x93, 0x82, 0xa2, 0x23,
	0x32, 0xa4, 0x7f, 0x0d, 0x53, 0xdb, 0xa0, 0x03, 0xec, 0x30, 0x19, 0xe9, 0x6a, 0x72, 0x97, 0x32,
	0x65, 0x7b, 0x60, 0x5f, 0xde, 0x03, 0x74, 0x61, 0x95, 0x76, 0x5c, 0xe7, 0x5c, 0xb5, 0xe3, 0x6a,
	0xc8, 0x3e, 0x91, 0xc4, 0x69, 0x74, 0xec, 0x25, 0x43, 0x56, 0x61, 0x70, 0x13, 0xac, 0x49, 0x2e,
	0x49, 0xa0, 0x81, 0x6c, 0x2f, 0xfd, 0x40, 0x4f, 0x4a, 0x41, 0x5e, 0x32, 0x21, 0xe7, 0xd5, 0xc3,
	0xe2, 0x3e, 0x1b, 0xfe, 0x18, 0x6c, 0x57, 0x9e, 0xfa, 0x47, 0xfc, 0x7b, 0xdf, 0xd6, 0x40, 0xbb,
	0xc4, 0xfb, 0x3a, 0x3e, 0x87, 0x1f, 0x80, 0x7d, 0xe0, 0xfb, 0xf0, 0x4e, 0xe5, 0x15, 0xf9, 0xf3,
	0xe4, 0xde, 0xad, 0x0f, 0x4a, 0x01, 0x51, 0xf7, 0xd3, 0x8f, 0xdf, 0x5f, 0x1a, 0x3b, 0x08, 0x61,
	0x15, 0x7d, 0x3a, 0xa6, 0x7d, 0x7c, 0xfe, 0xa8, 0xfc, 0x29, 0x7e, 0x6e, 0xed, 0xc2, 0x8f, 0x16,
	0xb0, 0x8f, 0x68, 0x50, 0x43, 0x90, 0xbf, 0x0c, 0x35, 0x04, 0x85, 0x57, 0x00, 0x61, 0x4d, 0xf0,
	0x60, 0x77, 0x67, 0x39, 0x01, 0x9e, 0x32, 0x7f, 0xa6, 0x9a, 0x70, 0xcc, 0xeb, 0x9a, 0x90, 0xbf,
	0x0f, 0x35, 0x08, 0x85, 0xa5, 0x9f, 0x37, 0xc1, 0x5d, 0xb1, 0x09, 0x9f, 0x2d, 0x60, 0x9f, 0xc4,
	0x93, 0x1a, 0x82, 0x7c, 0xa7, 0x6a, 0x08, 0x0a, 0x4b, 0x80, 0x5e, 0x68, 0x82, 0x67, 0x70, 0x7f,
	0x39, 0x81, 0xc0, 0x53, 0x25, 0xcd, 0x19, 0x9e, 0xaa, 0xbd, 0x9c, 0xe1, 0x69, 0x98, 0x8c, 0x66,
	0xf0, 0xc2, 0x02, 0x4d, 0x25, 0x4b, 0x58, 0x9d, 0xaf, 0xa0, 0x75, 0xf7, 0xde, 0x92, 0x28, 0x83,
	0xb5, 0xa7, 0xb1, 0x1e, 0xc2, 0xdd, 0xd5, 0xb1, 0xfa, 0x2d, 0xfd, 0xff, 0xf9, 0xf8, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x5e, 0x5b, 0xcf, 0x45, 0xd6, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion5

// RoleBindingResourceSrvClient is the client API for RoleBindingResourceSrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoleBindingResourceSrvClient interface {
	Add(ctx context.Context, in *RoleBindingResourceAddRequest, opts ...grpc.CallOption) (*RoleBindingResourceAddResponse, error)
	Del(ctx context.Context, in *RoleBindingResourceDelRequest, opts ...grpc.CallOption) (*RoleBindingResourceDelResponse, error)
	Mod(ctx context.Context, in *RoleBindingResourceModRequest, opts ...grpc.CallOption) (*RoleBindingResourceModResponse, error)
	Qry(ctx context.Context, in *RoleBindingResourceQryRequest, opts ...grpc.CallOption) (*RoleBindingResourceQryResponse, error)
	List(ctx context.Context, in *RoleBindingResourceListRequest, opts ...grpc.CallOption) (*RoleBindingResourceListResponse, error)
	Close() error
}

type roleBindingResourceSrvClient struct {
	cc *grpc.ClientConn
}

// origin client method
func NewRoleBindingResourceSrvClient(cc *grpc.ClientConn) RoleBindingResourceSrvClient {
	return &roleBindingResourceSrvClient{cc}
}

// new client method
func NewAnkrRoleBindingResourceSrvClient(addr string) (RoleBindingResourceSrvClient, error) {
	c, err := grpc.Dial(addr, grpc.WithInsecure())
	if err != nil {
		return nil, err
	}
	return &roleBindingResourceSrvClient{c}, nil
}

// new client close method
func (c *roleBindingResourceSrvClient) Close() error {
	return c.cc.Close()
}

func (c *roleBindingResourceSrvClient) Add(ctx context.Context, in *RoleBindingResourceAddRequest, opts ...grpc.CallOption) (*RoleBindingResourceAddResponse, error) {
	out := new(RoleBindingResourceAddResponse)
	err := c.cc.Invoke(ctx, "/rbac.RoleBindingResourceSrv/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleBindingResourceSrvClient) Del(ctx context.Context, in *RoleBindingResourceDelRequest, opts ...grpc.CallOption) (*RoleBindingResourceDelResponse, error) {
	out := new(RoleBindingResourceDelResponse)
	err := c.cc.Invoke(ctx, "/rbac.RoleBindingResourceSrv/Del", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleBindingResourceSrvClient) Mod(ctx context.Context, in *RoleBindingResourceModRequest, opts ...grpc.CallOption) (*RoleBindingResourceModResponse, error) {
	out := new(RoleBindingResourceModResponse)
	err := c.cc.Invoke(ctx, "/rbac.RoleBindingResourceSrv/Mod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleBindingResourceSrvClient) Qry(ctx context.Context, in *RoleBindingResourceQryRequest, opts ...grpc.CallOption) (*RoleBindingResourceQryResponse, error) {
	out := new(RoleBindingResourceQryResponse)
	err := c.cc.Invoke(ctx, "/rbac.RoleBindingResourceSrv/Qry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleBindingResourceSrvClient) List(ctx context.Context, in *RoleBindingResourceListRequest, opts ...grpc.CallOption) (*RoleBindingResourceListResponse, error) {
	out := new(RoleBindingResourceListResponse)
	err := c.cc.Invoke(ctx, "/rbac.RoleBindingResourceSrv/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoleBindingResourceSrvServer is the server API for RoleBindingResourceSrv service.
type RoleBindingResourceSrvServer interface {
	Add(context.Context, *RoleBindingResourceAddRequest) (*RoleBindingResourceAddResponse, error)
	Del(context.Context, *RoleBindingResourceDelRequest) (*RoleBindingResourceDelResponse, error)
	Mod(context.Context, *RoleBindingResourceModRequest) (*RoleBindingResourceModResponse, error)
	Qry(context.Context, *RoleBindingResourceQryRequest) (*RoleBindingResourceQryResponse, error)
	List(context.Context, *RoleBindingResourceListRequest) (*RoleBindingResourceListResponse, error)
}

// UnimplementedRoleBindingResourceSrvServer can be embedded to have forward compatible implementations.
type UnimplementedRoleBindingResourceSrvServer struct {
}

func (*UnimplementedRoleBindingResourceSrvServer) Add(ctx context.Context, req *RoleBindingResourceAddRequest) (*RoleBindingResourceAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedRoleBindingResourceSrvServer) Del(ctx context.Context, req *RoleBindingResourceDelRequest) (*RoleBindingResourceDelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Del not implemented")
}
func (*UnimplementedRoleBindingResourceSrvServer) Mod(ctx context.Context, req *RoleBindingResourceModRequest) (*RoleBindingResourceModResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mod not implemented")
}
func (*UnimplementedRoleBindingResourceSrvServer) Qry(ctx context.Context, req *RoleBindingResourceQryRequest) (*RoleBindingResourceQryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Qry not implemented")
}
func (*UnimplementedRoleBindingResourceSrvServer) List(ctx context.Context, req *RoleBindingResourceListRequest) (*RoleBindingResourceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterRoleBindingResourceSrvServer(s *grpc.Server, srv RoleBindingResourceSrvServer) {
	s.RegisterService(&_RoleBindingResourceSrv_serviceDesc, srv)
}

func _RoleBindingResourceSrv_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleBindingResourceAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	//if exist trace id then set new span id, else set the entire id values
	m := make(map[string]string)
	if md, ok := metadata.FromIncomingContext(ctx); ok {
		if vs := md.Get(logger.TraceID); len(vs) > 0 {
			m[logger.TraceID] = vs[len(vs)-1]
		} else {
			m[logger.TraceID] = l.Generate().String()
		}
		if vs := md.Get(logger.SpanID); len(vs) > 0 {
			m[logger.ParentSpanID] = vs[len(vs)-1]
		} else {
			m[logger.ParentSpanID] = l.Generate().String()
		}
	}
	m[logger.SpanID] = l.Generate().String()
	ctx = metadata.NewIncomingContext(ctx, metadata.New(m))
	if interceptor == nil {
		// output request
		reqBody, err := json.Marshal(&in)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "request"))
		} else {
			l.Info(ctx, string(reqBody), zap.String("type", "request"))
		}
		rsp, err := srv.(RoleBindingResourceSrvServer).Add(ctx, in)
		// output response
		rspBody, err := json.Marshal(&rsp)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "response"))
		} else {
			l.Info(ctx, string(rspBody), zap.String("type", "response"))
		}
		return rsp, err
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rbac.RoleBindingResourceSrv/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleBindingResourceSrvServer).Add(ctx, req.(*RoleBindingResourceAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleBindingResourceSrv_Del_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleBindingResourceDelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	//if exist trace id then set new span id, else set the entire id values
	m := make(map[string]string)
	if md, ok := metadata.FromIncomingContext(ctx); ok {
		if vs := md.Get(logger.TraceID); len(vs) > 0 {
			m[logger.TraceID] = vs[len(vs)-1]
		} else {
			m[logger.TraceID] = l.Generate().String()
		}
		if vs := md.Get(logger.SpanID); len(vs) > 0 {
			m[logger.ParentSpanID] = vs[len(vs)-1]
		} else {
			m[logger.ParentSpanID] = l.Generate().String()
		}
	}
	m[logger.SpanID] = l.Generate().String()
	ctx = metadata.NewIncomingContext(ctx, metadata.New(m))
	if interceptor == nil {
		// output request
		reqBody, err := json.Marshal(&in)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "request"))
		} else {
			l.Info(ctx, string(reqBody), zap.String("type", "request"))
		}
		rsp, err := srv.(RoleBindingResourceSrvServer).Del(ctx, in)
		// output response
		rspBody, err := json.Marshal(&rsp)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "response"))
		} else {
			l.Info(ctx, string(rspBody), zap.String("type", "response"))
		}
		return rsp, err
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rbac.RoleBindingResourceSrv/Del",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleBindingResourceSrvServer).Del(ctx, req.(*RoleBindingResourceDelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleBindingResourceSrv_Mod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleBindingResourceModRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	//if exist trace id then set new span id, else set the entire id values
	m := make(map[string]string)
	if md, ok := metadata.FromIncomingContext(ctx); ok {
		if vs := md.Get(logger.TraceID); len(vs) > 0 {
			m[logger.TraceID] = vs[len(vs)-1]
		} else {
			m[logger.TraceID] = l.Generate().String()
		}
		if vs := md.Get(logger.SpanID); len(vs) > 0 {
			m[logger.ParentSpanID] = vs[len(vs)-1]
		} else {
			m[logger.ParentSpanID] = l.Generate().String()
		}
	}
	m[logger.SpanID] = l.Generate().String()
	ctx = metadata.NewIncomingContext(ctx, metadata.New(m))
	if interceptor == nil {
		// output request
		reqBody, err := json.Marshal(&in)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "request"))
		} else {
			l.Info(ctx, string(reqBody), zap.String("type", "request"))
		}
		rsp, err := srv.(RoleBindingResourceSrvServer).Mod(ctx, in)
		// output response
		rspBody, err := json.Marshal(&rsp)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "response"))
		} else {
			l.Info(ctx, string(rspBody), zap.String("type", "response"))
		}
		return rsp, err
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rbac.RoleBindingResourceSrv/Mod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleBindingResourceSrvServer).Mod(ctx, req.(*RoleBindingResourceModRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleBindingResourceSrv_Qry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleBindingResourceQryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	//if exist trace id then set new span id, else set the entire id values
	m := make(map[string]string)
	if md, ok := metadata.FromIncomingContext(ctx); ok {
		if vs := md.Get(logger.TraceID); len(vs) > 0 {
			m[logger.TraceID] = vs[len(vs)-1]
		} else {
			m[logger.TraceID] = l.Generate().String()
		}
		if vs := md.Get(logger.SpanID); len(vs) > 0 {
			m[logger.ParentSpanID] = vs[len(vs)-1]
		} else {
			m[logger.ParentSpanID] = l.Generate().String()
		}
	}
	m[logger.SpanID] = l.Generate().String()
	ctx = metadata.NewIncomingContext(ctx, metadata.New(m))
	if interceptor == nil {
		// output request
		reqBody, err := json.Marshal(&in)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "request"))
		} else {
			l.Info(ctx, string(reqBody), zap.String("type", "request"))
		}
		rsp, err := srv.(RoleBindingResourceSrvServer).Qry(ctx, in)
		// output response
		rspBody, err := json.Marshal(&rsp)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "response"))
		} else {
			l.Info(ctx, string(rspBody), zap.String("type", "response"))
		}
		return rsp, err
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rbac.RoleBindingResourceSrv/Qry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleBindingResourceSrvServer).Qry(ctx, req.(*RoleBindingResourceQryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleBindingResourceSrv_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleBindingResourceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	//if exist trace id then set new span id, else set the entire id values
	m := make(map[string]string)
	if md, ok := metadata.FromIncomingContext(ctx); ok {
		if vs := md.Get(logger.TraceID); len(vs) > 0 {
			m[logger.TraceID] = vs[len(vs)-1]
		} else {
			m[logger.TraceID] = l.Generate().String()
		}
		if vs := md.Get(logger.SpanID); len(vs) > 0 {
			m[logger.ParentSpanID] = vs[len(vs)-1]
		} else {
			m[logger.ParentSpanID] = l.Generate().String()
		}
	}
	m[logger.SpanID] = l.Generate().String()
	ctx = metadata.NewIncomingContext(ctx, metadata.New(m))
	if interceptor == nil {
		// output request
		reqBody, err := json.Marshal(&in)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "request"))
		} else {
			l.Info(ctx, string(reqBody), zap.String("type", "request"))
		}
		rsp, err := srv.(RoleBindingResourceSrvServer).List(ctx, in)
		// output response
		rspBody, err := json.Marshal(&rsp)
		if err != nil {
			l.Error(ctx, err.Error(), zap.String("type", "response"))
		} else {
			l.Info(ctx, string(rspBody), zap.String("type", "response"))
		}
		return rsp, err
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rbac.RoleBindingResourceSrv/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleBindingResourceSrvServer).List(ctx, req.(*RoleBindingResourceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoleBindingResourceSrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rbac.RoleBindingResourceSrv",
	HandlerType: (*RoleBindingResourceSrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _RoleBindingResourceSrv_Add_Handler,
		},
		{
			MethodName: "Del",
			Handler:    _RoleBindingResourceSrv_Del_Handler,
		},
		{
			MethodName: "Mod",
			Handler:    _RoleBindingResourceSrv_Mod_Handler,
		},
		{
			MethodName: "Qry",
			Handler:    _RoleBindingResourceSrv_Qry_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RoleBindingResourceSrv_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/role_binding_resource.proto",
}
